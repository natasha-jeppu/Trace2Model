name: CI

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]


jobs:

  Linux:

    runs-on: ubuntu-latest

    steps:
    
    - uses: actions/checkout@v2

    - name: CBMC dependencies
      run: |
        sudo apt-get install g++ gcc flex bison make git libwww-perl patch
        
    - name: Tool dependencies
      run: |
        sudo apt-get install python3
    
    - name: Cache cbmc
      id: cache-cbmc
      uses: actions/cache@v1.2.0
      with:
        path: ./cbmc
        key: ${{ runner.os }}-cbmc
        
    - name: Cache cvc4
      id: cache-cvc4
      uses: actions/cache@v1.2.0
      with:
        path: ./cvc4
        key: ${{ runner.os }}-cvc4
      
    - name: CBMC Setup
      if: steps.cache-cbmc.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/diffblue/cbmc.git
        cd cbmc
        git reset --hard 25ba4e6a600b033df7dbaf3d19437afd8b9bdd1c
        make -C src minisat2-download
        make -C src
    
    - name: Add to path
      run: |
        echo "$(pwd)/cbmc/src/cbmc" >> $GITHUB_PATH
        
    - name: CVC4 Setup
      if: steps.cache-cvc4.outputs.cache-hit != 'true'
      run: |
        wget https://github.com/CVC4/CVC4/releases/download/1.8/cvc4-1.8-x86_64-linux-opt
        chmod +x cvc4-1.8-x86_64-linux-opt
        ln -s ./cvc4-1.8-x86_64-linux-opt cvc4
        
    - name: Add to path
      run: |
        echo "$(pwd)" >> $GITHUB_PATH
        
    - name: Check cvc4 installation
      run: |
        cvc4 aux_files/gen_event.sl
        cvc4 aux_files/gen_event_update_enum.sl

    - name: Python modules
      run: |
        sudo apt-get install graphviz libgraphviz-dev pkg-config python3-pip python3-setuptools
        pip3 install numpy pygraphviz transitions termcolor
    
    - name: Run benchmarks
      run: |
        python3 run.py -gen_o incr -mt dfa -syn guard
        
  OSX:

    runs-on: macos-latest

    steps:
    
    - uses: actions/checkout@v1

    - name: Cache cbmc
      id: cache-cbmc
      uses: actions/cache@v1.2.0
      with:
        path: ./cbmc
        key: ${{ runner.os }}-cbmc
    
    - name: Cache python3
      id: cache-python3
      uses: actions/cache@v1.2.0
      with:
        path: $(pwd)
        key: ${{ runner.os }}-python3
        
    - name: Cache cvc4
      id: cache-cvc4
      uses: actions/cache@v1.2.0
      with:
        path: ./cvc4
        key: ${{ runner.os }}-cvc4

    - name: python3
      if: steps.cache-python3.outputs.cache-hit != 'true'
      run: |
        brew install python3
        
    - name: CVC4 Setup
      if: steps.cache-cvc4.outputs.cache-hit != 'true'
      run: |
        wget https://github.com/CVC4/CVC4/releases/download/1.8/cvc4-1.8-macos-opt
        chmod +x cvc4-1.8-macos-opt
        ln -s ./cvc4-1.8-macos-opt cvc4
        
    - name: Add to path
      run: |
        echo "$(pwd)" >> $GITHUB_PATH
        
    - name: Check cvc4 installation
      run: |
        cvc4 aux_files/gen_event.sl
        cvc4 aux_files/gen_event_update_enum.sl
        
    - name: Python modules
      if: steps.cache-python3.outputs.cache-hit != 'true'
      run: |
        brew install graphviz
        pip3 install graphviz
        pip3 install pygraphviz
        pip3 install numpy transitions termcolor

    - name: Setup xcode
      uses: sinoru/actions-setup-xcode@v1.1.1
      with:
        xcode-version: 10.3
        
    - name: cbmc clone
      if: steps.cache-cbmc.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/diffblue/cbmc.git
        cd cbmc
        git reset --hard 25ba4e6a600b033df7dbaf3d19437afd8b9bdd1c
        make -C src minisat2-download
        make -C src
        
    - name: Add to path
      run: |
         echo "$(pwd)/cbmc/src/cbmc" >> $GITHUB_PATH
    
    - name: Run benchmarks
      run: |
        python3 run.py -gen_o incr -mt dfa -syn guard
